//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using UnityCollections = Unity.Collections;


namespace Algorand.Unity.WalletConnect
{
    
    
    public partial struct WalletTransaction
    {
        
        private static bool @__generated__IsValid = WalletTransaction.@__generated__InitializeAlgoApiFormatters();
        
        private static bool @__generated__InitializeAlgoApiFormatters()
        {
            Algorand.Unity.AlgoApiFormatterLookup.Add<Algorand.Unity.WalletConnect.WalletTransaction>(new Algorand.Unity.AlgoApiObjectFormatter<Algorand.Unity.WalletConnect.WalletTransaction>(false).Assign("txn", (Algorand.Unity.WalletConnect.WalletTransaction x) => x.Txn, (ref Algorand.Unity.WalletConnect.WalletTransaction x, System.Byte[] value) => x.Txn = value, Algorand.Unity.ArrayComparer<System.Byte>.Instance).Assign("message", (Algorand.Unity.WalletConnect.WalletTransaction x) => x.Message, (ref Algorand.Unity.WalletConnect.WalletTransaction x, System.String value) => x.Message = value, Algorand.Unity.StringComparer.Instance).Assign("authAddr", (Algorand.Unity.WalletConnect.WalletTransaction x) => x.AuthAddr, (ref Algorand.Unity.WalletConnect.WalletTransaction x, Algorand.Unity.Address value) => x.AuthAddr = value).Assign("msig", (Algorand.Unity.WalletConnect.WalletTransaction x) => x.Msig, (ref Algorand.Unity.WalletConnect.WalletTransaction x, Algorand.Unity.WalletConnect.MultisigMetadata value) => x.Msig = value).Assign("signers", (Algorand.Unity.WalletConnect.WalletTransaction x) => x.Signers, (ref Algorand.Unity.WalletConnect.WalletTransaction x, Algorand.Unity.Address[] value) => x.Signers = value, Algorand.Unity.ArrayComparer<Algorand.Unity.Address>.Instance));
            return true;
        }
    }
}
