//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Algorand.Unity.Indexer;
using Algorand.Unity.LowLevel;
using Unity.Collections;
using UnityEngine;
using Algorand.Unity.Net;

using Dotnet = Algorand.Indexer.Model;

namespace Algorand.Unity.Indexer.Net
{
    public static class BlockExtensions
    {
        public static Dotnet.Block ToDotnet(this Block from)
        {
            return from.Convert().ToDotnet<Dotnet.Block>();
        }

        public static Block ToUnity(this Dotnet.Block from)
        {
            return from.Convert().ToUnity<Block>();
        }
    }

    public static class TransactionSignatureMultisigExtensions
    {
        public static Dotnet.TransactionSignatureMultisig ToDotnet(this TransactionSignatureMultisig from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionSignatureMultisig>();
        }

        public static TransactionSignatureMultisig ToUnity(this Dotnet.TransactionSignatureMultisig from)
        {
            return from.Convert().ToUnity<TransactionSignatureMultisig>();
        }
    }

    public static class ApplicationParamsExtensions
    {
        public static Dotnet.ApplicationParams ToDotnet(this ApplicationParams from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationParams>();
        }

        public static ApplicationParams ToUnity(this Dotnet.ApplicationParams from)
        {
            return from.Convert().ToUnity<ApplicationParams>();
        }
    }

    public static class TealValueExtensions
    {
        public static Dotnet.TealValue ToDotnet(this TealValue from)
        {
            return from.Convert().ToDotnet<Dotnet.TealValue>();
        }

        public static TealValue ToUnity(this Dotnet.TealValue from)
        {
            return from.Convert().ToUnity<TealValue>();
        }
    }

    public static class TransactionSignatureLogicsigExtensions
    {
        public static Dotnet.TransactionSignatureLogicsig ToDotnet(this TransactionSignatureLogicsig from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionSignatureLogicsig>();
        }

        public static TransactionSignatureLogicsig ToUnity(this Dotnet.TransactionSignatureLogicsig from)
        {
            return from.Convert().ToUnity<TransactionSignatureLogicsig>();
        }
    }

    public static class EvalDeltaExtensions
    {
        public static Dotnet.EvalDelta ToDotnet(this EvalDelta from)
        {
            return from.Convert().ToDotnet<Dotnet.EvalDelta>();
        }

        public static EvalDelta ToUnity(this Dotnet.EvalDelta from)
        {
            return from.Convert().ToUnity<EvalDelta>();
        }
    }

    public static class TransactionApplicationExtensions
    {
        public static Dotnet.TransactionApplication ToDotnet(this TransactionApplication from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionApplication>();
        }

        public static TransactionApplication ToUnity(this Dotnet.TransactionApplication from)
        {
            return from.Convert().ToUnity<TransactionApplication>();
        }
    }

    public static class ApplicationStateSchemaExtensions
    {
        public static Dotnet.ApplicationStateSchema ToDotnet(this ApplicationStateSchema from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationStateSchema>();
        }

        public static ApplicationStateSchema ToUnity(this Dotnet.ApplicationStateSchema from)
        {
            return from.Convert().ToUnity<ApplicationStateSchema>();
        }
    }

    public static class TransactionAssetConfigExtensions
    {
        public static Dotnet.TransactionAssetConfig ToDotnet(this TransactionAssetConfig from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionAssetConfig>();
        }

        public static TransactionAssetConfig ToUnity(this Dotnet.TransactionAssetConfig from)
        {
            return from.Convert().ToUnity<TransactionAssetConfig>();
        }
    }

    public static class TransactionPaymentExtensions
    {
        public static Dotnet.TransactionPayment ToDotnet(this TransactionPayment from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionPayment>();
        }

        public static TransactionPayment ToUnity(this Dotnet.TransactionPayment from)
        {
            return from.Convert().ToUnity<TransactionPayment>();
        }
    }

    public static class MiniAssetHoldingExtensions
    {
        public static Dotnet.MiniAssetHolding ToDotnet(this MiniAssetHolding from)
        {
            return from.Convert().ToDotnet<Dotnet.MiniAssetHolding>();
        }

        public static MiniAssetHolding ToUnity(this Dotnet.MiniAssetHolding from)
        {
            return from.Convert().ToUnity<MiniAssetHolding>();
        }
    }

    public static class ApplicationLogDataExtensions
    {
        public static Dotnet.ApplicationLogData ToDotnet(this ApplicationLogData from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationLogData>();
        }

        public static ApplicationLogData ToUnity(this Dotnet.ApplicationLogData from)
        {
            return from.Convert().ToUnity<ApplicationLogData>();
        }
    }

    public static class TransactionAssetFreezeExtensions
    {
        public static Dotnet.TransactionAssetFreeze ToDotnet(this TransactionAssetFreeze from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionAssetFreeze>();
        }

        public static TransactionAssetFreeze ToUnity(this Dotnet.TransactionAssetFreeze from)
        {
            return from.Convert().ToUnity<TransactionAssetFreeze>();
        }
    }

    public static class TransactionKeyregExtensions
    {
        public static Dotnet.TransactionKeyreg ToDotnet(this TransactionKeyreg from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionKeyreg>();
        }

        public static TransactionKeyreg ToUnity(this Dotnet.TransactionKeyreg from)
        {
            return from.Convert().ToUnity<TransactionKeyreg>();
        }
    }

    public static class TransactionSignatureExtensions
    {
        public static Dotnet.TransactionSignature ToDotnet(this TransactionSignature from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionSignature>();
        }

        public static TransactionSignature ToUnity(this Dotnet.TransactionSignature from)
        {
            return from.Convert().ToUnity<TransactionSignature>();
        }
    }

    public static class AssetExtensions
    {
        public static Dotnet.Asset ToDotnet(this Asset from)
        {
            return from.Convert().ToDotnet<Dotnet.Asset>();
        }

        public static Asset ToUnity(this Dotnet.Asset from)
        {
            return from.Convert().ToUnity<Asset>();
        }
    }

    public static class TealKeyValueExtensions
    {
        public static Dotnet.TealKeyValue ToDotnet(this TealKeyValue from)
        {
            return from.Convert().ToDotnet<Dotnet.TealKeyValue>();
        }

        public static TealKeyValue ToUnity(this Dotnet.TealKeyValue from)
        {
            return from.Convert().ToUnity<TealKeyValue>();
        }
    }

    public static class HealthCheckExtensions
    {
        public static Dotnet.HealthCheck ToDotnet(this HealthCheck from)
        {
            return from.Convert().ToDotnet<Dotnet.HealthCheck>();
        }

        public static HealthCheck ToUnity(this Dotnet.HealthCheck from)
        {
            return from.Convert().ToUnity<HealthCheck>();
        }
    }

    public static class EvalDeltaKeyValueExtensions
    {
        public static Dotnet.EvalDeltaKeyValue ToDotnet(this EvalDeltaKeyValue from)
        {
            return from.Convert().ToDotnet<Dotnet.EvalDeltaKeyValue>();
        }

        public static EvalDeltaKeyValue ToUnity(this Dotnet.EvalDeltaKeyValue from)
        {
            return from.Convert().ToUnity<EvalDeltaKeyValue>();
        }
    }

    public static class AssetHoldingExtensions
    {
        public static Dotnet.AssetHolding ToDotnet(this AssetHolding from)
        {
            return from.Convert().ToDotnet<Dotnet.AssetHolding>();
        }

        public static AssetHolding ToUnity(this Dotnet.AssetHolding from)
        {
            return from.Convert().ToUnity<AssetHolding>();
        }
    }

    public static class AccountExtensions
    {
        public static Dotnet.Account ToDotnet(this Account from)
        {
            return from.Convert().ToDotnet<Dotnet.Account>();
        }

        public static Account ToUnity(this Dotnet.Account from)
        {
            return from.Convert().ToUnity<Account>();
        }
    }

    public static class BlockRewardsExtensions
    {
        public static Dotnet.BlockRewards ToDotnet(this BlockRewards from)
        {
            return from.Convert().ToDotnet<Dotnet.BlockRewards>();
        }

        public static BlockRewards ToUnity(this Dotnet.BlockRewards from)
        {
            return from.Convert().ToUnity<BlockRewards>();
        }
    }

    public static class AccountStateDeltaExtensions
    {
        public static Dotnet.AccountStateDelta ToDotnet(this AccountStateDelta from)
        {
            return from.Convert().ToDotnet<Dotnet.AccountStateDelta>();
        }

        public static AccountStateDelta ToUnity(this Dotnet.AccountStateDelta from)
        {
            return from.Convert().ToUnity<AccountStateDelta>();
        }
    }

    public static class BlockUpgradeVoteExtensions
    {
        public static Dotnet.BlockUpgradeVote ToDotnet(this BlockUpgradeVote from)
        {
            return from.Convert().ToDotnet<Dotnet.BlockUpgradeVote>();
        }

        public static BlockUpgradeVote ToUnity(this Dotnet.BlockUpgradeVote from)
        {
            return from.Convert().ToUnity<BlockUpgradeVote>();
        }
    }

    public static class ApplicationExtensions
    {
        public static Dotnet.Application ToDotnet(this Application from)
        {
            return from.Convert().ToDotnet<Dotnet.Application>();
        }

        public static Application ToUnity(this Dotnet.Application from)
        {
            return from.Convert().ToUnity<Application>();
        }
    }

    public static class StateSchemaExtensions
    {
        public static Dotnet.StateSchema ToDotnet(this StateSchema from)
        {
            return from.Convert().ToDotnet<Dotnet.StateSchema>();
        }

        public static StateSchema ToUnity(this Dotnet.StateSchema from)
        {
            return from.Convert().ToUnity<StateSchema>();
        }
    }

    public static class ApplicationLocalStateExtensions
    {
        public static Dotnet.ApplicationLocalState ToDotnet(this ApplicationLocalState from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationLocalState>();
        }

        public static ApplicationLocalState ToUnity(this Dotnet.ApplicationLocalState from)
        {
            return from.Convert().ToUnity<ApplicationLocalState>();
        }
    }

    public static class TransactionSignatureMultisigSubsignatureExtensions
    {
        public static Dotnet.TransactionSignatureMultisigSubsignature ToDotnet(this TransactionSignatureMultisigSubsignature from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionSignatureMultisigSubsignature>();
        }

        public static TransactionSignatureMultisigSubsignature ToUnity(this Dotnet.TransactionSignatureMultisigSubsignature from)
        {
            return from.Convert().ToUnity<TransactionSignatureMultisigSubsignature>();
        }
    }

    public static class AccountParticipationExtensions
    {
        public static Dotnet.AccountParticipation ToDotnet(this AccountParticipation from)
        {
            return from.Convert().ToDotnet<Dotnet.AccountParticipation>();
        }

        public static AccountParticipation ToUnity(this Dotnet.AccountParticipation from)
        {
            return from.Convert().ToUnity<AccountParticipation>();
        }
    }

    public static class TransactionAssetTransferExtensions
    {
        public static Dotnet.TransactionAssetTransfer ToDotnet(this TransactionAssetTransfer from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionAssetTransfer>();
        }

        public static TransactionAssetTransfer ToUnity(this Dotnet.TransactionAssetTransfer from)
        {
            return from.Convert().ToUnity<TransactionAssetTransfer>();
        }
    }

    public static class TransactionExtensions
    {
        public static Dotnet.Transaction ToDotnet(this Transaction from)
        {
            return from.Convert().ToDotnet<Dotnet.Transaction>();
        }

        public static Transaction ToUnity(this Dotnet.Transaction from)
        {
            return from.Convert().ToUnity<Transaction>();
        }
    }

    public static class AssetParamsExtensions
    {
        public static Dotnet.AssetParams ToDotnet(this AssetParams from)
        {
            return from.Convert().ToDotnet<Dotnet.AssetParams>();
        }

        public static AssetParams ToUnity(this Dotnet.AssetParams from)
        {
            return from.Convert().ToUnity<AssetParams>();
        }
    }

    public static class BlockUpgradeStateExtensions
    {
        public static Dotnet.BlockUpgradeState ToDotnet(this BlockUpgradeState from)
        {
            return from.Convert().ToDotnet<Dotnet.BlockUpgradeState>();
        }

        public static BlockUpgradeState ToUnity(this Dotnet.BlockUpgradeState from)
        {
            return from.Convert().ToUnity<BlockUpgradeState>();
        }
    }

    public static class AssetHoldingsResponseExtensions
    {
        public static Dotnet.AssetHoldingsResponse ToDotnet(this AssetHoldingsResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.AssetHoldingsResponse>();
        }

        public static AssetHoldingsResponse ToUnity(this Dotnet.AssetHoldingsResponse from)
        {
            return from.Convert().ToUnity<AssetHoldingsResponse>();
        }
    }

    public static class ApplicationResponseExtensions
    {
        public static Dotnet.ApplicationResponse ToDotnet(this ApplicationResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationResponse>();
        }

        public static ApplicationResponse ToUnity(this Dotnet.ApplicationResponse from)
        {
            return from.Convert().ToUnity<ApplicationResponse>();
        }
    }

    public static class TransactionsResponseExtensions
    {
        public static Dotnet.TransactionsResponse ToDotnet(this TransactionsResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionsResponse>();
        }

        public static TransactionsResponse ToUnity(this Dotnet.TransactionsResponse from)
        {
            return from.Convert().ToUnity<TransactionsResponse>();
        }
    }

    public static class AccountsResponseExtensions
    {
        public static Dotnet.AccountsResponse ToDotnet(this AccountsResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.AccountsResponse>();
        }

        public static AccountsResponse ToUnity(this Dotnet.AccountsResponse from)
        {
            return from.Convert().ToUnity<AccountsResponse>();
        }
    }

    public static class AssetResponseExtensions
    {
        public static Dotnet.AssetResponse ToDotnet(this AssetResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.AssetResponse>();
        }

        public static AssetResponse ToUnity(this Dotnet.AssetResponse from)
        {
            return from.Convert().ToUnity<AssetResponse>();
        }
    }

    public static class AssetBalancesResponseExtensions
    {
        public static Dotnet.AssetBalancesResponse ToDotnet(this AssetBalancesResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.AssetBalancesResponse>();
        }

        public static AssetBalancesResponse ToUnity(this Dotnet.AssetBalancesResponse from)
        {
            return from.Convert().ToUnity<AssetBalancesResponse>();
        }
    }

    public static class AccountResponseExtensions
    {
        public static Dotnet.AccountResponse ToDotnet(this AccountResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.AccountResponse>();
        }

        public static AccountResponse ToUnity(this Dotnet.AccountResponse from)
        {
            return from.Convert().ToUnity<AccountResponse>();
        }
    }

    public static class ApplicationsResponseExtensions
    {
        public static Dotnet.ApplicationsResponse ToDotnet(this ApplicationsResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationsResponse>();
        }

        public static ApplicationsResponse ToUnity(this Dotnet.ApplicationsResponse from)
        {
            return from.Convert().ToUnity<ApplicationsResponse>();
        }
    }

    public static class TransactionResponseExtensions
    {
        public static Dotnet.TransactionResponse ToDotnet(this TransactionResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.TransactionResponse>();
        }

        public static TransactionResponse ToUnity(this Dotnet.TransactionResponse from)
        {
            return from.Convert().ToUnity<TransactionResponse>();
        }
    }

    public static class ApplicationLogsResponseExtensions
    {
        public static Dotnet.ApplicationLogsResponse ToDotnet(this ApplicationLogsResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationLogsResponse>();
        }

        public static ApplicationLogsResponse ToUnity(this Dotnet.ApplicationLogsResponse from)
        {
            return from.Convert().ToUnity<ApplicationLogsResponse>();
        }
    }

    public static class AssetsResponseExtensions
    {
        public static Dotnet.AssetsResponse ToDotnet(this AssetsResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.AssetsResponse>();
        }

        public static AssetsResponse ToUnity(this Dotnet.AssetsResponse from)
        {
            return from.Convert().ToUnity<AssetsResponse>();
        }
    }

    public static class ApplicationLocalStatesResponseExtensions
    {
        public static Dotnet.ApplicationLocalStatesResponse ToDotnet(this ApplicationLocalStatesResponse from)
        {
            return from.Convert().ToDotnet<Dotnet.ApplicationLocalStatesResponse>();
        }

        public static ApplicationLocalStatesResponse ToUnity(this Dotnet.ApplicationLocalStatesResponse from)
        {
            return from.Convert().ToUnity<ApplicationLocalStatesResponse>();
        }
    }

}
